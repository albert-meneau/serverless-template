# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: my-service-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: ">=1.4.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 1024 # max 1536
  timeout: 30
  stage: dev
  region: us-east-1

  stackTags: #CF stack tags
    name: my-service-name
  iamRoleStatements: # IAM role statements so that services can be accessed in the AWS account
    - Effect: 'Allow'
      Action:
        - 'cloudwatch:*'
      Resource: '*'

  environment:
    DEPLOY_STAGE:  ${env:DEPLOY_STAGE}
    TOKEN_CLIENT_ID: ${env:TOKEN_CLIENT_ID}
    TOKEN_CLIENT_SECRET: ${env:TOKEN_CLIENT_SECRET}

custom:
  # usage:  ${self:custom.someVariable}
  # someVariable: someValue

package:
  exclude:
    - node_modules/serverless/**

functions:
  myFunction:
    description: "myFunction [${opt:stage, self:provider.stage}]: myFunction Description"
    handler: functions/handler.handle
    events:
      - http:
          path: my-service-name/path
          method: get
          cors: true


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

#functions:
#  hello:
#    handler: handler.hello
#
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
